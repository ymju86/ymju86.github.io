{
  "metadata": {
    "title": "Basic Packages - Python and Jupyter Notebook",
    "date": "2021-01-30",
    "author": "Youngmin Ju",
    "excerpt": "An introduction to essential Python packages for data science including NumPy, pandas, statsmodels, and matplotlib with practical examples.",
    "thumbnail": "/images/ds6.png",
    "tags": ["Python", "Data Science", "Jupyter", "NumPy", "pandas"]
  },
  "content": "# Jupyter Notebook Basic\n\nThe Jupyter Notebook has two modes:\n\n- command mode: blue cell border\n- edit mode: green cell border\n\nWhile in command mode (press Esc to activate)\n- Enter: take you into edit mode\n\nWhile in edit mode (press Enter to activate)\n- Esc: take you into command mode\n\nShortcuts in both modes:\n- Shift + Enter: run the current cell, select below\n- Ctrl + Enter: run selected cells\n- Alt + Enter: run the current cell, insert below\n- Ctrl + S: save and checkpoint\n\n# NumPy\nNumPy provides efficient tools for scientific computing and data analysis:\n1. np.array(): Multidimensional array capable of doing fast and efficient computations\n2. Built-in mathematical functions on arrays without writing loops\n3. Built-in linear algebra functions\n\n```python\n# Create 2 new lists height and weight\nheight = [1.87, 1.87, 1.82, 1.91, 1.90, 1.85]\nweight = [81.65, 97.52, 95.25, 92.98, 86.18, 88.45]\n\n# Import the numpy package as np\nimport numpy as np\n\n# Create 2 numpy arrays from height and weight\nnp_height = np.array(height)\nnp_weight = np.array(weight)\n\n# Element-wise calculations\n# Calculate bmi\nbmi = np_weight / np_height ** 2\n\n# Print the result\nprint(bmi)\n```\n\n# pandas\nThe package pandas is a free software library for Python including the following features:\n1. Data manipulation and analysis\n2. DataFrame objects and Series\n3. Export and import data from files and web\n4. Handling of missing data\n\n```python\nimport numpy as np\nimport pandas as pd\n\ndict = {\"country\": [\"Brazil\", \"Russia\", \"India\", \"China\", \"South Africa\"],\n       \"capital\": [\"Brasilia\", \"Moscow\", \"New Dehli\", \"Beijing\", \"Pretoria\"],\n       \"area\": [8.516, 17.10, 3.286, 9.597, 1.221],\n       \"population\": [200.4, 143.5, 1252, 1357, 52.98] }\n\nbrics = pd.DataFrame(dict)\nprint(dict)\nprint()\nprint(brics)\n```\n\n# statsmodels\nThe package statsmodels includes the following functions:\n1. Statistical models \n2. Hypothesis tests\n3. Data exploration \n4. Works in Python scripts, the Python and IPython shell and the jupyter notebook\n\n```python\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport statsmodels.api as sm\n\n# Artificial data:\nnsample = 100\nx = np.linspace(0, 10, 100)\nX = np.column_stack((x, x**2))\nbeta = np.array([1, 0.1, 10])\ne = np.random.normal(size=nsample)\n\n# Our model needs an intercept so we add a column of 1s:\nX = sm.add_constant(X)\ny = np.dot(X, beta) + 100*e\n\n# Fit and summary:\nmodel = sm.OLS(y, X)\nresults = model.fit()\nprint(results.summary())\n```\n\n# matplotlib\nThe package matplotlib includes the following functions:\n1. Image plots, Contour plots, Scatter plots, Polar plots, Line plots, 3D plots\n2. Variety of hardcopy formats\n3. Works in Python scripts, the Python and IPython shell and the jupyter notebook\n4. Interactive environments\n\n```python\n\"\"\"\nsimple demo of a scatter plot.\n\"\"\"\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nN=50\nx= np.random.rand(N)\ny= np.random.rand(N)\ncolors= np.random.rand(N)\narea = np.pi * (15 * np.random.rand(N))**2\n\nplt.scatter(x,y, s=area, c=colors, alpha=0.5)\nplt.show()\n```"
}
