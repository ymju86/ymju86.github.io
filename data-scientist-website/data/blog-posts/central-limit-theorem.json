{
  "metadata": {
    "title": "The Central Limit Theorem Explained",
    "date": "2020-08-23",
    "author": "Youngmin Ju",
    "excerpt": "A comprehensive explanation of the Central Limit Theorem, its importance in statistics, and its applications in data science.",
    "thumbnail": "/images/stat1.jpeg",
    "tags": ["Statistics", "Probability Theory", "Central Limit Theorem"]
  },
  "content": "# Central Limit Theorem (CLT)\n\nThe Central Limit Theorem is a fundamental concept in probability theory and statistics. It states that, given certain conditions, the distribution of sample means approximates a normal distribution as the sample size becomes larger, regardless of the underlying distribution of the population.\n\n## Key Points\n\n- Applies to independent and identically distributed random variables\n- Sample size should be sufficiently large (typically n ≥ 30)\n- The mean of the sampling distribution equals the population mean\n- The standard error of the mean decreases as sample size increases\n\n## Applicability of the Central Limit Theorem\n\n- When the probability distribution of X is normal, the distribution of X̄ is exactly normally distributed regardless of sample size\n- When the probability distribution of X is symmetrical, the CLT applies very well to small sample sizes (often as small as 10 ≤ n ≤ 25)\n- When the distribution of X is asymmetrical, the approximation to a normal distribution becomes more accurate as n becomes large\n\nGenerally, a good convergence of the sample mean distribution to a normal distribution can be achieved with a sample size of 25 or more.\n\n## Mathematical Formulation\n\nFor a sample mean X̄ from a population with mean μ and standard deviation σ:\n\nZ = (X̄ - μ)/(σ/√n) ~ N(0,1)\n\nWhere n is the sample size, and Z follows a standard normal distribution as n approaches infinity.\n\n## Python Implementation\n\n```python\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy import stats\n\n# Set random seed for reproducibility\nnp.random.seed(42)\n\n# Function to demonstrate CLT\ndef demonstrate_clt(distribution, n_samples, sample_size, n_experiments):\n    # Container for sample means\n    sample_means = np.zeros(n_experiments)\n    \n    # Generate sample means\n    for i in range(n_experiments):\n        # Generate samples from the distribution\n        samples = distribution(size=(n_samples, sample_size))\n        # Calculate the mean of each sample\n        sample_means[i] = np.mean(samples)\n    \n    # Plot the histogram of sample means\n    plt.figure(figsize=(10, 6))\n    plt.hist(sample_means, bins=30, density=True, alpha=0.6, color='g')\n    \n    # Plot the normal distribution curve\n    xmin, xmax = plt.xlim()\n    x = np.linspace(xmin, xmax, 100)\n    p = stats.norm.pdf(x, np.mean(sample_means), np.std(sample_means))\n    plt.plot(x, p, 'k', linewidth=2)\n    \n    plt.title(f'Distribution of Sample Means (n={sample_size})')\n    plt.xlabel('Sample Mean')\n    plt.ylabel('Density')\n    plt.grid(True)\n    plt.show()\n\n# Demonstrate CLT with different distributions\n# Uniform distribution\ndemonstrate_clt(np.random.uniform, 1000, 30, 1000)\n\n# Exponential distribution\ndemonstrate_clt(np.random.exponential, 1000, 30, 1000)\n\n# Binomial distribution\ndemonstrate_clt(lambda size: np.random.binomial(10, 0.5, size), 1000, 30, 1000)\n```\n\n## Applications\n\nThe Central Limit Theorem has wide-ranging applications in various fields:\n\n- Finance: Risk assessment and portfolio management\n- Quality Control: Process monitoring and improvement\n- Social Sciences: Survey analysis and population studies\n- Medicine: Clinical trials and drug efficacy studies\n\nUnderstanding and applying the Central Limit Theorem is essential for anyone working with data analysis, statistics, or machine learning."
}
